---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-anchore-feeds
  labels:
    app: sysdigcloud
    role: anchore-feeds
data:
  anchore.admin.user: admin
  anchore.db.endpoint: sysdigcloud-anchore-feeds-db-ext
  anchore.db.dbname: anchore
  anchore.db.user: postgres
  config.yaml: |
    service_dir: /anchore_service_config
    tmp_dir: "/tmp"
    log_level: INFO
    cleanup_images: true

    allow_awsecr_iam_auto: false
    host_id: "${ANCHORE_POD_NAME}"
    internal_ssl_verify: false
    auto_restart_services: false
    license_file: "/license/license.yaml"

    metrics:
      enabled: false

    credentials:
      database:
        db_connect: "postgresql+pg8000://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_ENDPOINT}/${ANCHORE_DB}"
        db_connect_args:
          timeout: 120
          ssl: false
        db_pool_size: 30
        db_pool_max_overflow: 30

    services:
      feeds:
        enabled: true
        require_auth: true
        endpoint_hostname: sysdigcloud-anchore-feeds
        listen: '0.0.0.0'
        port: 8448
        # Time delay in seconds between consecutive driver runs for processing data
        cycle_timers:
          driver_sync: 7200
        # Staging space for holding normalized output from drivers.
        local_workspace: /tmp
        # Drivers process data from external sources and store normalized data in local_workspace. Processing large data sets
        # is a time consuming process for some drivers. To speed it up the container is shipped with pre-loaded data which is used
        # by default if local_workspace is empty.
        workspace_preload:
          # Do not use pre-loaded data if local_workspace is empty. Drivers will generate normalized data from scratch
          disabled: true
          # To load the workspace from a different location, uncomment and configure workspace_preload_file property to point to the tar.gz file
          workspace_preload_file: "/workspace_preload/data.tar.gz"
        # If api_only is set to true, the service will not update feed data in the system.
        # API end points will be functional and serve feed data if any is available.
        api_only: true
        drivers:
          # Configuration section for drivers collecting and processing feed data.
          # All drivers are enabled by default unless explicitly disabled. npm and gem drivers are explicitly disabled out of the box
          npm:
            enabled: true
          gem:
            # rubygem data comes packaged as a PostgreSQL dump file. gem driver loads the pg dump and normalizes the data.
            # To enable gem driver comment the enabled property and uncomment the db_connect property.
            enabled: false
            db_connect: "postgresql+pg8000://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_ENDPOINT}/${ANCHORE_DB}/gems"
          centos:
            enabled: true
          debian:
            enabled: true
          ubuntu:
            enabled: true
          ol:
            enabled: true
          alpine:
            enabled: true
          snyk:
            enabled: false
        certDir: ""
        ssl_cert: ""
        ssl_key: ""
        ssl_enable: false
        ssl_verify: false
